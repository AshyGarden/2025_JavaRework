package oop.inherit;

/** (/**)  
 * @author チェヨンジュン
 * @date 2025.05.21
 *  */

public class Warrior extends Player{

	/*
	#子クラス、下位クラス(Child、subclass)
	- 親クラスからメンバー変数(フィールド)とメソッドを受け継ぐクラスを子クラス
	- 相続を適用するには、子クラス宣言部のクラス名の後にextendsを書いた後
	　引き継ぐ親クラスの名前を書けばいいです。
	 */
	
	int rage;
	/*
    	#マサード·オーバーライディング
	- 親が譲り受けるマサードは、すべての子供に合わせて設計されにくいため、足りない点、合わない場合
	子供クラスで内容を追加、修正できる - これがオーバーライディング

	-もし、子供のクラスで親が譲り受けたマサードを新たに再定義したら、子供が修正したマサードが優先呼び出し
	- オーバーラディイ規則(3つすべて一致しなければオーバーライディングは認められません)
	1. 親が譲るマサードと名前が同じであること! (character Info)
	2. 親譲りのマサードとリターンタイプも同じはず！(void)
	3. 親譲りのマサードとパラメーターの宣言方式が同じであること！()
	 */
	
	//#Object(最上位クラス(全クラスの上位クラス))

	//オーバーライディング自動完成 alt+shift+s
	//ウィンドウでoverride/implement Methods以降、希望する関数を選択して使用します
	@Override //annotation(機能ある注釈、オーバーライディング検査機能)
	void charaterInfo() {
		super.charaterInfo();
		System.out.println("怒り: "+rage); //オーバーライディング:再定義
	}
	
}
